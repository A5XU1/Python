print("""Move using the arrow keys.
Press space to draw.""")

from tkinter import *

window = Tk()
window.title("PyDraw")

area_height = 450
area_width = 800
central_x = area_width/2
central_y = area_height/2

toolkit = Canvas(window, width=800, height=75, bg="lightgrey") 
area = Canvas(window, width=area_width, height=area_height, bg="white")
toolkit.pack()
area.pack()

pen = area.create_rectangle(-5,-5,5,5, fill="black")
area.move(pen, central_x, central_y)
pen_x = 0
pen_y = 0
color = 1

black = toolkit.create_rectangle(-15,-15,15,15, fill="black")
white = toolkit.create_rectangle(-15,-15,15,15, fill="white")
red = toolkit.create_rectangle(-15,-15,15,15, fill="red")
yellow = toolkit.create_rectangle(-15,-15,15,15, fill="yellow")
green = toolkit.create_rectangle(-15,-15,15,15, fill="green")
cyan = toolkit.create_rectangle(-15,-15,15,15, fill="cyan")
blue = toolkit.create_rectangle(-15,-15,15,15, fill="blue")
magenta = toolkit.create_rectangle(-15,-15,15,15, fill="magenta")

toolkit.move(black, 25+40, 25)
toolkit.move(white, 25+2*40, 25)
toolkit.move(red, 25+4*40, 25)
toolkit.move(yellow, 25+5*40, 25)
toolkit.move(green, 25+6*40, 25)
toolkit.move(cyan, 25+7*40, 25)
toolkit.move(blue, 25+8*40, 25)
toolkit.move(magenta, 25+9*40, 25)

effect1 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=NORMAL)
toolkit.move(effect1, 25+40, 25)
effect2 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect2, 25+2*40, 25)
effect3 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect3, 25+4*40, 25)
effect4 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect4, 25+5*40, 25)
effect5 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect5, 25+6*40, 25)
effect6 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect6, 25+7*40, 25)
effect7 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect7, 25+8*40, 25)
effect8 = toolkit.create_rectangle(-20,-20,20,20, outline="black", state=HIDDEN)
toolkit.move(effect8, 25+9*40, 25)

toolkit.create_text(25+40, 58, text="1", fill="black")
toolkit.create_text(25+2*40, 58, text="2", fill="black")
toolkit.create_text(25+4*40, 58, text="3", fill="black")
toolkit.create_text(25+5*40, 58, text="4", fill="black")
toolkit.create_text(25+6*40, 58, text="5", fill="black")
toolkit.create_text(25+7*40, 58, text="6", fill="black")
toolkit.create_text(25+8*40, 58, text="7", fill="black")
toolkit.create_text(25+9*40, 58, text="8", fill="black")

def control(event):

    global pen
    global color
    global pen_x
    global pen_y

    if event.keysym == "3":
        area.itemconfig(pen, fill="red", outline="red")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=NORMAL)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 3

    if event.keysym == "4":
        area.itemconfig(pen, fill="yellow", outline="yellow")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=NORMAL)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 4

    elif event.keysym == "5":
        area.itemconfig(pen, fill="green", outline="green")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=NORMAL)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 5

    elif event.keysym == "6":
        area.itemconfig(pen, fill="cyan", outline="cyan")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=NORMAL)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 6

    elif event.keysym == "7":
        area.itemconfig(pen, fill="blue", outline="blue")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=NORMAL)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 7

    elif event.keysym == "8":
        area.itemconfig(pen, fill="magenta", outline="magenta")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=NORMAL)
        color = 8

    elif event.keysym == "1":
        area.itemconfig(pen, fill="black", outline="black")
        toolkit.itemconfig(effect1, state=NORMAL)
        toolkit.itemconfig(effect2, state=HIDDEN)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 1

    elif event.keysym == "2":
        area.itemconfig(pen, fill="white", outline="white")
        toolkit.itemconfig(effect1, state=HIDDEN)
        toolkit.itemconfig(effect2, state=NORMAL)
        toolkit.itemconfig(effect3, state=HIDDEN)
        toolkit.itemconfig(effect4, state=HIDDEN)
        toolkit.itemconfig(effect5, state=HIDDEN)
        toolkit.itemconfig(effect6, state=HIDDEN)
        toolkit.itemconfig(effect7, state=HIDDEN)
        toolkit.itemconfig(effect8, state=HIDDEN)
        color = 2

    elif event.keysym == "Up":
        if not pen_y < -198:
            area.move(pen, 0, -11)
            pen_y = pen_y-11
    elif event.keysym == "Down":
        if not pen_y > 198:
            area.move(pen, 0, 11)
            pen_y = pen_y+11
    elif event.keysym == "Left":
        if not pen_x < -374:
            area.move(pen, -11, 0)
            pen_x = pen_x-11
    elif event.keysym == "Right":
        if not pen_x > 374:
            area.move(pen, 11, 0)
            pen_x = pen_x+11
    elif event.keysym == "space":
        if color == 1:
            pen = area.create_rectangle(-5,-5,5,5, fill="black", outline="black")
        if color == 2:
            pen = area.create_rectangle(-5,-5,5,5, fill="white", outline="white")
        if color == 3:
            pen = area.create_rectangle(-5,-5,5,5, fill="red", outline="red")
        if color == 4:
            pen = area.create_rectangle(-5,-5,5,5, fill="yellow", outline="yellow")
        if color == 5:
            pen = area.create_rectangle(-5,-5,5,5, fill="green", outline="green")
        if color == 6:
            pen = area.create_rectangle(-5,-5,5,5, fill="cyan", outline="cyan")
        if color == 7:
            pen = area.create_rectangle(-5,-5,5,5, fill="blue", outline="blue")
        if color == 8:
            pen = area.create_rectangle(-5,-5,5,5, fill="magenta", outline="magenta")
        area.move(pen, central_x + pen_x, central_y + pen_y)

area.bind_all("<Key>", control)
